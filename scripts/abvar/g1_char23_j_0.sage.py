

# This file was *autogenerated* from the file g1_char23_j_0.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_11 = Integer(11); _sage_const_3 = Integer(3); _sage_const_7 = Integer(7); _sage_const_0 = Integer(0)
from sage.schemes.elliptic_curves.ell_finite_field import curves_with_j_0, curves_with_j_0_char2, curves_with_j_0_char3, curves_with_j_1728
from sage.databases.cremona import cremona_letter_code
from collections import defaultdict

output_filename = "output23_0_1728.txt"
counts_filename = "counts23_0_1728.txt"

qs = [_sage_const_2 **r for r in range(_sage_const_1 ,_sage_const_11 )] + [_sage_const_3 **r for r in range(_sage_const_1 ,_sage_const_7 )]

def signed_cremona_letter_code(m):
    if m >= _sage_const_0 :
        return cremona_letter_code(m)
    else:
        return 'a' + cremona_letter_code(-m)
    
def get_label(f,q):
    g=_sage_const_1 
    return '%s.%s.%s' % (g, q, '_'.join(signed_cremona_letter_code(f[i]) for i in range(_sage_const_1 ,g+_sage_const_1 )))
    
    
def output_data():
    with open(output_filename, "w") as file:
        file.write("")
    
    with open(counts_filename, "w") as file:
        file.write("")

    for q in qs:
        
        with open(output_filename, "a") as file:
            file.write("\n")
            to_write = "(g,q) = %s,%s\n" % (_sage_const_1 , q)
            file.write(to_write)
            
        label_to_curves = defaultdict(set)
        if q%_sage_const_2  == _sage_const_0 :
            curves = curves_with_j_0_char2(GF(q))
        else:
            curves = curves_with_j_0_char3(GF(q))
            
        for curve in curves:
            Lpoly = curve.frobenius_polynomial()
            label_to_curves[get_label(Lpoly,q)].add(curve._equation_string())
        
        for label_key in label_to_curves:
            with open(output_filename, "a") as file:
                to_write = "%s|{%s}\n" % (label_key, ','.join(label_to_curves[label_key]))
                file.write(to_write)
            
        with open(counts_filename, "a") as file:
            to_write = "%s,%s\n" % (q, len(label_to_curves.keys()))
            file.write(to_write)
                
output_data()

