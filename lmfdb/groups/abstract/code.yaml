prompt:
  magma: 'magma'
  gap: 'gap'

logo:
  magma: <img src = "https://i.stack.imgur.com/0468s.png" width="50px">
  gap: <img src = "https://gap.math.u-bordeaux.fr/logo/Logo%20Couleurs/Logo_GAP-GP_Couleurs_L150px.png" width="50px">

comment:
  magma: |
    //
  gap: |
    #

not-implemented:
  magma: |
    // (not yet implemented)
  gap: |
    \\\\ (not yet implemented)



presentation:
  comment: Define the group with the given generators and relations
  magma: F<{gens}> := FreeGroup({ngens});  G := quo<F | {reln}>;
  gap: G := quo(a*b+c);


permutation:
  comment: Define the group as a permutation group
  magma: G := PermutationGroup< {deg} | {perms} >;
  gap: G := Group( perms );


GLZ:
  comment: Define the group as a matrix group with coefficients in Z
  magma: G := MatrixGroup< {nZ}, Integers() | {LZ} >;
  gap: \\\\


GLFp:
  magma: G := MatrixGroup< {nFp}, GF({Fp}) | {LFp} >;
  gap: \\\\

GLZN:
  comment: Define the group as a matrix group with coefficients in GLFp
  magma: G := MatrixGroup< {nZN}, Integers({N}) | {LZN} >;
  gap: \\\\

GLZq:
  comment: Define the group as a matrix group with coefficients in GLFp
  magma: G := MatrixGroup< {nZq}, Integers({Zq}) | {LZq} >;
  gap: \\\\


GLFq:
  comment: Define the group as a matrix group with coefficients in GLFp
  magma: G := MatrixGroup< {nFq}, GL({Fq}) | {LFq} >;
  gap: \\\\


transitive:
  comment: Define the group from the transitive group database
  magma: G := TransitiveGroup(d,n);
  gap: \\\\
