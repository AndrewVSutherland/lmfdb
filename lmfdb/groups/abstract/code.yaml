prompt:
  magma: 'magma'
  gap: 'gap'
  sage: 'sage'

logo:
  magma: <img src = "https://i.stack.imgur.com/0468s.png" width="50px">
  gap: <img src = "https://gap.math.u-bordeaux.fr/logo/Logo%20Couleurs/Logo_GAP-GP_Couleurs_L150px.png" width="50px">
  sage: <img src ="https://www.sagemath.org/pix/sage_logo_new.png" width = "50px">

comment:
  magma: |
    //
  gap: |
    #
  sage: |
    #

not-implemented:
  magma: |
    // (not yet implemented)
  gap: |
    # (not yet implemented)
  sage: |
    # (not yet implemented)


presentation:
  comment: Define the group with the given generators and relations
  magma: G := PCGroup({pccodelist}); {gens} := Explode({used_gens}); AssignNames(~G, {magma_assign});
  gap: G := PcGroupCode({pccode},{ordgp}); {gap_assign}


permutation:
  comment: Define the group as a permutation group
  magma: G := PermutationGroup< {deg} | {perms} >;
  gap: G := Group( {perms} );
  sage: G = PermutationGroup([{perms_sage}])


GLZ:
  comment: Define the group as a matrix group with coefficients in Z
  magma: G := MatrixGroup< {nZ}, Integers() | {LZ} >;
  gap: G := Group({LZsplit});


GLFp:
  comment: Define the group as a matrix group with coefficients in GLFp
  magma: G := MatrixGroup< {nFp}, GF({Fp}) | {LFp} >;
  gap: G := Group({LFpsplit});

GLZN:
  comment: Define the group as a matrix group with coefficients in GLZN
  magma: G := MatrixGroup< {nZN}, Integers({N}) | {LZN} >;
  gap: G := Group({LZNsplit});

GLZq:
  comment: Define the group as a matrix group with coefficients in GLZq
  magma: G := MatrixGroup< {nZq}, Integers({Zq}) | {LZq} >;
  gap: G := Group({LZqsplit});

GLFq:
  comment: Define the group as a matrix group with coefficients in GLFq
  magma: F:=GF({Fq}); al:=F.1; G := MatrixGroup< {nFq}, F | {LFq} >;
  gap: G := Group({LFqsplit});

transitive:
  comment: Define the group from the transitive group database
  magma: G := TransitiveGroup(d,n);
  gap: G := TransitiveGroup(d,n);
  sage: G = TransitiveGroup(d,n)

order:
  comment: Order of the group
  magma: Order(G);
  gap: Order(G);
  sage:  G.order()

exponent:
  comment: Exponent of the group
  magma: Exponent(G);
  gap: Exponent(G);
  sage:  G.exponent()

automorphism_group:
  comment: Automorphism group
  gap: AutomorphismGroup(G);
  magma: AutomorphismGroup(G);

nilpotency_class:
  comment:  Nilpotency class of the group
  magma: NilpotencyClass(G);
  gap: NilpotencyClassOfGroup(G);

derived_length:
  comment:  Derived length of the group
  magma:  DerivedLength(G);

conjugacy_classes:
  comment: Conjugacy classes of the group
  magma: ConjugacyClasses(G);
  sage: G.conjugacy_classes()

subgroups:
  comment:  Subgroups of the group
  magma:  Subgroups(G);
  sage:   G.subgroups()

center:
  comment: Center of the group
  magma: Center(G);
  sage:  G.center()

commutator_subgroup:
  comment: Commutator subgroup of the group G
  magma:  CommutatorSubgroup(G);
  sage:  G.commutator()

frattini_subgroup:
  comment: Frattini subgroup of the group G
  magma:  FrattiniSubgroup(G);
  sage:  G.frattini_subgroup()

fitting_subgroup:
  comment:  Fitting subgroup of the group G
  magma:  Fitting(G);
  sage:  G.fitting_subgroup()

radical:
  comment: Radical of the group G
  magma:  Radical(G);

socle:
  comment:  Socle of the group G
  magma: Socle(G);
  sage:  G.socle()

character_table:
  comment: Character table
  magma: CharacterTable(G);
  sage: G.character_table()

